Why does the Material class have its own Shade method?

- I think that what we do is we call RayIntersect on the spheres and in that method, we record the local surface normal and hit point in hitInfo
- In Color getPixelColor called after shootRay (using the hitInfo), we pass the ray and hitInfo, and we transform the hitPoint and surfaceNormal into world space.
- Still make sure to record depth info

In this method:
Variables needed:
- Vec3 going toward camera
- Vec3 goong toward light
- Surface normal

Why does the Illuminate method take in the position and normal as parameters but not use them? Are we supposed to implement these methods there? If so, wouldn't the lights need way more info to do shading?
Why doesn't the PointLight class let us access its variables like position? Calling illuminate seems dumb when are we're passing is a position and normal.

Need to transform out into world space to do shading. USE FromNodeCoords.
Illuminate gives us geometryTerm * lightIntensity.
In lights.h, it's all implemented.
We need to worry about Light class apparently.
Important bit is materials.h.
Point light doesn't have falloff.
